plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'maven-publish'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("com.google.code.gson:gson:2.13.1")
	implementation("software.amazon.awssdk:s3:2.31.63")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('zipStatic', Jar) {
	from('src/main/java/com/example/datasourceapp/') {
		into('static')  // Everything goes under /static inside the zip
	}
	destinationDirectory = file("$buildDir/zips")
}

sonar{
	properties {
		property 'sonar.projectKey', 'datasourceapp'
		property 'sonar.host.url', this.property('sonar_host_url')
		property 'sonar.token', this.getProperty('sonar_token')
		property 'sonar.exclusions', "**/controller/Mycontroller.java"
	}
}

tasks.register('print'){
	System.out.println(this.getProperty('sonar_host_url'))
}






